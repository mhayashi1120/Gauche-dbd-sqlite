#!/usr/bin/env gosh
;; Configuring Gauche-dbd-sqlite
;; Run ./configure (or gosh ./configure) to generate Makefiles.

(use gauche.configure)

(load "configure-compat"
      :paths `(,(sys-dirname (current-load-path)))
      :error-if-not-found #f)

(define (errmsg fmt . args)
  (apply format (current-error-port) fmt args))

;; Here you can define handlers of configure arguments by cf-arg-enable
;; and cf-arg-with.  Note that --with-local is handled implicitly if you use
;; cf-init-gauche-extension.
(cf-arg-with
 'sqlite3
 "  --with-sqlite3=PATH      Use SQLite3 devkit installed under PATH."
 )

;; Initialize configure.  This creates the global context, parses
;; command-line args and sets up default values.
(cf-init-gauche-extension)

;; Here you can add feature tests and other cf-define's.

(define (required-lib-not-found libname)
  (errmsg "~a not found.\n" libname)
  (exit 1))

(cf-check-lib
 "sqlite3" "sqlite3_libversion"
 :if-not-found required-lib-not-found)

;; Output
(cf-output-default)

;; Local variables:
;; mode: scheme
;; end:
