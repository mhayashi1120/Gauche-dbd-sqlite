#!/usr/bin/env gosh
;; Configuring Gauche-dbd-sqlite
;; Run ./configure (or gosh ./configure) to generate Makefiles.

(use gauche.mop.singleton)
(use gauche.configure)

(define (required-lib-not-found libname)
  (format #t "~a not found.\n" libname)
  (exit 1))

;; Here you can define handlers of configure arguments by cf-arg-enable
;; and cf-arg-with.  Note that --with-local is handled implicitly if you use
;; cf-init-gauche-extension.
(cf-arg-with
 'libssl
 "  --with-sqlite3=PATH      Use Sqlite devkit installed under PATH."
 (^x (cf-subst-prepend 'LDFLAGS x)))

;; Initialize configure.  This creates the global context, parses
;; command-line args and sets up default values.
(cf-init-gauche-extension)

;; Here you can add feature tests and other cf-define's.
(cf-lang (instance-of <c-language>))

(cf-subst 'LIBS "")
(cf-subst 'LDFLAGS "")

(cf-check-headers '("sqlite3.h"))

(cf-check-lib "sqlite3" "sqlite3_libversion"
              :if-not-found required-lib-not-found)

;; Output
(cf-output-default)

;; Local variables:
;; mode: scheme
;; end:
